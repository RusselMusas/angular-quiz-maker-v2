{"version":3,"file":"main.27e947ba94562434.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/components/quiz-questions/quiz-questions.component.ts","./src/app/components/quiz-questions/quiz-questions.component.html","./src/app/components/quiz-results/quiz-results.component.html","./src/app/components/quiz-results/quiz-results.component.ts","./src/app/modules/app-routing.module.ts","./src/app/pipes/decode-html.pipe.ts","./src/app/services/process-httpmsg.service.ts","./src/app/services/quiz.service.ts","./src/environments/environment.prod.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'quiz-maker';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './modules/app-routing.module';\nimport { ProcessHttpmsgService } from './services/process-httpmsg.service';\nimport { QuizService } from './services/quiz.service';\n\nimport { AppComponent } from './app.component';\nimport { QuizResultsComponent } from './components/quiz-results/quiz-results.component';\nimport { QuizQuestionsComponent } from './components/quiz-questions/quiz-questions.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DecodeHtml } from './pipes/decode-html.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuizResultsComponent,\n    QuizQuestionsComponent,\n    NotFoundComponent,\n    DecodeHtml\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    ProcessHttpmsgService,\n    QuizService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent {\n\n}\n","<div class=\"container-fluid text-secondary text-center\">\n    <div class=\"m-4\">\n        <img src=\"assets/images/404-page-not-found-error.jpg\" \n            class=\"img-fluid rounded\" alt=\"Sorry, page not found\"\n            width=\"60%\">\n    </div>\n    <div>\n        <p class=\"text-large\">Click to\n            <a class=\"text-info\" routerLink=\"/questions\" \n            role=\"button\">Return to quiz questions</a>\n        </p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { Category } from 'src/app/models/category.model';\nimport { QuizQuestion, Result } from 'src/app/models/quiz-question.model';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-quiz-questions',\n  templateUrl: './quiz-questions.component.html',\n  styleUrls: ['./quiz-questions.component.css']\n})\nexport class QuizQuestionsComponent implements OnInit {\n\n  difficulties: string[] = [\"Easy\", \"Medium\", \"Hard\"];\n  categories: Category | undefined;\n  questions: QuizQuestion | undefined;\n  question1: Result | undefined;\n  question2: Result | undefined;\n  question3: Result | undefined;\n  question4: Result | undefined;\n  question5: Result | undefined;\n  quizAmount: number = 5;\n  quizType: string = \"multiple\";\n  formCreateQuiz = new FormGroup({\n    categorySelect: new FormControl('', Validators.required),\n    difficultySelect: new FormControl('', Validators.required)\n  });\n  formSubmitQuiz = new FormGroup({\n    inputResponse1: new FormControl('', Validators.required),\n    inputResponse2: new FormControl('', Validators.required),\n    inputResponse3: new FormControl('', Validators.required),\n    inputResponse4: new FormControl('', Validators.required),\n    inputResponse5: new FormControl('', Validators.required)\n  });\n  isSubmitted01: boolean = false;\n\n  constructor(private quizService: QuizService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.getCategories();\n  }\n\n  getCategories() {\n    this.quizService.getCategories()\n      .subscribe({\n        next: response => {\n          this.categories = response\n        },\n        error: error => {\n          console.log(\"Error occurred: \", error)\n        },\n        complete: () => {\n          console.log(\"getCategories completed.\")\n        }\n      });\n  }\n\n  createQuiz() {\n    // console.log(this.formCreateQuiz.value);\n    this.isSubmitted01 = true;\n    this.resetChoices();\n    let catId: number = this.formCreateQuiz.value.categorySelect ? parseInt(this.formCreateQuiz.value.categorySelect) : 0;\n    let difficulty: string = this.formCreateQuiz.value.difficultySelect ? this.formCreateQuiz.value.difficultySelect.toLowerCase() : \"\";\n    this.quizService.getQuizQuestions(this.quizAmount, catId, difficulty, this.quizType)\n      .subscribe({\n        next: response => {\n          response = this.setAllAnswers(response);\n          console.log(\"QuizQuestions response: \", response);\n          this.questions = response;\n          this.question1 = this.questions.results[0];\n          this.question2 = this.questions.results[1];\n          this.question3 = this.questions.results[2];\n          this.question4 = this.questions.results[3];\n          this.question5 = this.questions.results[4];\n          this.isSubmitted01 = false;\n        },\n        error: error => {\n          console.log(\"Error occurred: \", error)\n        },\n        complete: () => {\n          console.log(\"getQuizQuestions completed.\")\n        }\n      });\n  }\n\n  setAllAnswers(quizQuestions: QuizQuestion) {\n    quizQuestions.results.forEach(function (arrayItem) {\n      arrayItem.all_answers = [...arrayItem.incorrect_answers];\n      arrayItem.all_answers.push(arrayItem.correct_answer);\n      arrayItem.all_answers = [...arrayItem.all_answers.sort(() => Math.random() - 0.5)];\n    });\n\n    return quizQuestions;\n  }\n\n  resetChoices() {\n    this.questions = undefined;\n    this.question1 = undefined;\n    this.question2 = undefined;\n    this.question3 = undefined;\n    this.question4 = undefined;\n    this.question5 = undefined;\n  }\n\n  submitQuiz() {\n    // console.log(\"Quiz response: \", this.formSubmitQuiz.value);\n    const navigationExtras: NavigationExtras = {\n      state: { dataR: this.formSubmitQuiz.value, dataQ: this.questions },\n    };\n    this.router.navigate(['/results'], navigationExtras);\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-8 mx-auto pt-2\">\n            <h1 class=\"text-center text-uppercase mb-4 mt-2 font-weight-bold\">Quiz Maker</h1>\n            <form class=\"form-inline row\" [formGroup]=\"formCreateQuiz\" (ngSubmit)=\"createQuiz()\">\n                <div class=\"form-group mb-2 col-5\">\n                    <label for=\"categorySelect\" class=\"sr-only\">Category</label>\n                    <select id=\"categorySelect\" formControlName=\"categorySelect\"\n                        class=\"form-control form-control-sm w-100\">\n                        <option value=\"\" selected>Select a category</option>\n                        <option *ngFor=\"let item of categories?.trivia_categories\" [value]=\"item.id\">\n                            {{ item.name }}\n                        </option>\n                    </select>\n                </div>\n                <div class=\"form-group mb-2 col-5\">\n                    <label for=\"difficultySelect\" class=\"sr-only\">Difficulty</label>\n                    <select id=\"difficultySelect\" formControlName=\"difficultySelect\"\n                        class=\"form-control form-control-sm w-100\">\n                        <option value=\"\" selected>Select difficulty</option>\n                        <option *ngFor=\"let item of difficulties\" [value]=\"item\">\n                            {{ item }}\n                        </option>\n                    </select>\n                </div>\n                <div class=\"form-group mb-2 col-2 justify-content-end\">\n                    <button type=\"submit\" class=\"btn btn-light border-secondary btn-sm w-100\" id=\"createBtn\"\n                        [disabled]=\"formCreateQuiz.invalid || isSubmitted01\">Create</button>\n                </div>\n                <div [hidden]=\"!isSubmitted01\" class=\"spinner-border text-secondary ml-2\" role=\"status\">\n                    <span class=\"sr-only\">Processing...</span>\n                </div>\n            </form>\n            <form class=\"form-inline row px-4\" [formGroup]=\"formSubmitQuiz\" (ngSubmit)=\"submitQuiz()\">\n                <div class=\"form-group mb-4 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question1?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question1?.all_answers; let j = index\">\n                            <input type=\"radio\" name=\"inputResponse1\" formControlName=\"inputResponse1\" [value]=\"element\"\n                                [id]=\"'q1' + j\" />\n                            <label class=\"radio btn btn-sm\" [for]=\"'q1' + j\">{{ element | decodeHtml }}</label>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group mb-2 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question2?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question2?.all_answers; let j = index\">\n                            <input type=\"radio\" name=\"inputResponse2\" formControlName=\"inputResponse2\" [value]=\"element\"\n                                [id]=\"'q2' + j\" />\n                            <label class=\"radio btn btn-sm\" [for]=\"'q2' + j\">{{ element | decodeHtml }}</label>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group mb-2 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question3?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question3?.all_answers; let j = index\">\n                            <input type=\"radio\" name=\"inputResponse3\" formControlName=\"inputResponse3\" [value]=\"element\"\n                                [id]=\"'q3' + j\" />\n                            <label class=\"radio btn btn-sm\" [for]=\"'q3' + j\">{{ element | decodeHtml }}</label>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group mb-2 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question4?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question4?.all_answers; let j = index\">\n                            <input type=\"radio\" name=\"inputResponse4\" formControlName=\"inputResponse4\" [value]=\"element\"\n                                [id]=\"'q4' + j\" />\n                            <label class=\"radio btn btn-sm\" [for]=\"'q4' + j\">{{ element | decodeHtml }}</label>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group mb-2 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question5?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question5?.all_answers; let j = index\">\n                            <input type=\"radio\" name=\"inputResponse5\" formControlName=\"inputResponse5\" [value]=\"element\"\n                                [id]=\"'q5' + j\" />\n                            <label class=\"radio btn btn-sm\" [for]=\"'q5' + j\">{{ element | decodeHtml }}</label>\n                        </ng-container>\n                    </div>\n                </div>\n                <p class=\"d-none\">{{ formSubmitQuiz.value | json }}</p>\n                <div class=\"form-group button mb-2 mt-4 col-12 justify-content-center\">\n                    <button name=\"submitBtn\" class=\"btn btn-sm w-75 btn-secondary\"\n                        [hidden]=\"formSubmitQuiz.invalid || !questions\">submit</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-8 mx-auto pt-2\">\n            <h1 class=\"text-center text-uppercase mb-4 mt-2 font-weight-bold\">Results</h1>\n            <div class=\"form-inline row px-4\">\n                <div class=\"form-group mb-4 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question1?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question1?.all_answers; let j = index\">\n                            <button class=\"btn btn-sm\" \n                                [ngClass]=\"{\n                                    'btn-outline-success': isIndifferent(element, question1?.correct_answer, quizResponse?.inputResponse1),\n                                    'btn-success': isCorrectAnswer(element, question1?.correct_answer),\n                                    'btn-danger': isIncorrectAnswer(element, question1?.correct_answer, quizResponse?.inputResponse1)\n                                }\"\n                                [value]=\"element\" name=\"inputResponse1\" \n                                [id]=\"'q1' + j\">{{ element | decodeHtml }}</button>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group mb-2 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question2?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question2?.all_answers; let j = index\">\n                            <button class=\"btn btn-sm\" \n                                [ngClass]=\"{\n                                    'btn-outline-success': isIndifferent(element, question2?.correct_answer, quizResponse?.inputResponse2),\n                                    'btn-success': isCorrectAnswer(element, question2?.correct_answer),\n                                    'btn-danger': isIncorrectAnswer(element, question2?.correct_answer, quizResponse?.inputResponse2)\n                                }\"\n                                [value]=\"element\" name=\"inputResponse2\" \n                                [id]=\"'q2' + j\">{{ element | decodeHtml }}</button>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group mb-2 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question3?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question3?.all_answers; let j = index\">\n                            <button class=\"btn btn-sm\" \n                                [ngClass]=\"{\n                                    'btn-outline-success': isIndifferent(element, question3?.correct_answer, quizResponse?.inputResponse3),\n                                    'btn-success': isCorrectAnswer(element, question3?.correct_answer),\n                                    'btn-danger': isIncorrectAnswer(element, question3?.correct_answer, quizResponse?.inputResponse3)\n                                }\"\n                                [value]=\"element\" name=\"inputResponse3\" \n                                [id]=\"'q3' + j\">{{ element | decodeHtml }}</button>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group mb-2 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question4?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question4?.all_answers; let j = index\">\n                            <button class=\"btn btn-sm\" \n                                [ngClass]=\"{\n                                    'btn-outline-success': isIndifferent(element, question4?.correct_answer, quizResponse?.inputResponse4),\n                                    'btn-success': isCorrectAnswer(element, question4?.correct_answer),\n                                    'btn-danger': isIncorrectAnswer(element, question4?.correct_answer, quizResponse?.inputResponse4)\n                                }\"\n                                [value]=\"element\" name=\"inputResponse4\" \n                                [id]=\"'q4' + j\">{{ element | decodeHtml }}</button>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group mb-2 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question5?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question5?.all_answers; let j = index\">\n                            <button class=\"btn btn-sm\" \n                                [ngClass]=\"{\n                                    'btn-outline-success': isIndifferent(element, question5?.correct_answer, quizResponse?.inputResponse5),\n                                    'btn-success': isCorrectAnswer(element, question5?.correct_answer),\n                                    'btn-danger': isIncorrectAnswer(element, question5?.correct_answer, quizResponse?.inputResponse5)\n                                }\"\n                                [value]=\"element\" name=\"inputResponse5\" \n                                [id]=\"'q5' + j\">{{ element | decodeHtml }}</button>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group button mb-2 mt-4 col-12 justify-content-center\">\n                    <div class=\"my-2 px-3\" [ngClass]=\"{\n                        'bg-danger': quizScore <= 1,\n                        'bg-warning': quizScore > 1 && quizScore <= 3,\n                        'bg-success': quizScore > 3\n                    }\">{{ 'You scored ' + quizScore + ' out of ' + totalQuiz }}</div>\n                </div>\n                <div class=\"form-group button mb-2 mt-4 col-12 justify-content-center\">\n                    <button type=\"button\" class=\"btn btn-sm w-75 btn-secondary\" \n                            routerLink=\"/questions\">Create a new quiz</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormResponse, QuizQuestion, Result } from 'src/app/models/quiz-question.model';\n\n@Component({\n  selector: 'app-quiz-results',\n  templateUrl: './quiz-results.component.html',\n  styleUrls: ['./quiz-results.component.css']\n})\nexport class QuizResultsComponent implements OnInit {\n\n  quizResponse: FormResponse | undefined;\n  quizQuestion: QuizQuestion | undefined;\n  question1: Result | undefined;\n  question2: Result | undefined;\n  question3: Result | undefined;\n  question4: Result | undefined;\n  question5: Result | undefined;\n  quizScore: number = 0;\n  totalQuiz: number = 0;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.quizResponse = window.history.state['dataR'];\n    this.quizQuestion = window.history.state['dataQ'];\n    this.question1 = this.quizQuestion?.results[0];\n    this.question2 = this.quizQuestion?.results[1];\n    this.question3 = this.quizQuestion?.results[2];\n    this.question4 = this.quizQuestion?.results[3];\n    this.question5 = this.quizQuestion?.results[4];\n    // console.log(this.quizQuestion);\n    // console.log(this.quizResponse);\n    this.quizScore = this.computeScore(this.quizResponse ? this.quizResponse : undefined);\n    this.totalQuiz = this.quizQuestion?.results? this.quizQuestion.results.length : 0;\n  }\n\n  isIndifferent(element: string, correct_answer: string | undefined, inputResponse: string | undefined) {\n    return element !== correct_answer && element !== inputResponse;\n  }\n\n  isCorrectAnswer(element: string, correct_answer: string | undefined) {\n    return element === correct_answer;\n  }\n\n  isIncorrectAnswer(element: string, correct_answer: string | undefined, inputResponse: string | undefined) {\n    return element !== correct_answer && element === inputResponse;\n  }\n\n  computeScore(quizResponse: FormResponse | undefined): number {\n    let score: number = 0;\n    if(!quizResponse) {\n      return score;\n    }\n\n    this.quizQuestion?.results.forEach(function (arrayItem, index) {\n      if(index === 0 && arrayItem.correct_answer === quizResponse.inputResponse1) {\n        score += 1;\n      }\n      if(index === 1 && arrayItem.correct_answer === quizResponse.inputResponse2) {\n        score += 1;\n      }\n      if(index === 2 && arrayItem.correct_answer === quizResponse.inputResponse3) {\n        score += 1;\n      }\n      if(index === 3 && arrayItem.correct_answer === quizResponse.inputResponse4) {\n        score += 1;\n      }\n      if(index === 4 && arrayItem.correct_answer === quizResponse.inputResponse5) {\n        score += 1;\n      }\n    });\n\n    return score;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { QuizQuestionsComponent } from '../components/quiz-questions/quiz-questions.component';\nimport { QuizResultsComponent } from '../components/quiz-results/quiz-results.component';\nimport { NotFoundComponent } from '../components/not-found/not-found.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/questions', pathMatch: 'full' },\n  { path: 'questions', component: QuizQuestionsComponent },\n  { path: 'results', component: QuizResultsComponent },\n  { path: 'not-found', component: NotFoundComponent },\n  { path: '**', redirectTo: '/not-found' }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name: \"decodeHtml\"\r\n})\r\nexport class DecodeHtml implements PipeTransform {\r\n\r\n    transform(value: string | undefined) {\r\n        if (!value)\r\n            return \"\";\r\n\r\n        const tempElement = document.createElement(\"div\")\r\n        tempElement.innerHTML = value\r\n        return tempElement.innerText\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { throwError, TimeoutError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\ninterface errorMsg {\n  status: number;\n  message: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessHttpmsgService {\n\n  constructor() { }\n\n  public handleError(error: HttpErrorResponse) {\n    let errMsg: errorMsg = { status: -1, message: \"\" }; // Default values\n    \n    if (error && error.error && (error.error.message && error.error.status)) {\n      errMsg.status = error.error.status;\n      errMsg.message = error.error.message;\n    } else if (error.error instanceof ErrorEvent) {\n      errMsg.status = 50;\n      errMsg.message = error.error.message;\n    } else if (error instanceof TimeoutError) {\n      errMsg.status = 60;\n      errMsg.message = \"Timeout exceeded!\";\n    } else {\n      errMsg.status = error.status;\n      errMsg.message = error.message;\n    }\n\n    return throwError(() => errMsg);\n  }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, retry, timeout } from 'rxjs';\nimport { ProcessHttpmsgService } from './process-httpmsg.service';\nimport { environment } from 'src/environments/environment';\nimport { Category } from '../models/category.model';\nimport { QuizQuestion } from '../models/quiz-question.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n\n  apiBaseUrl: string = environment.apiUrl;\n  timeOut: number = environment.httpTimeOut;\n  private headers = new HttpHeaders();\n\n  constructor(private http: HttpClient,\n              private processHttpMsg: ProcessHttpmsgService) {\n    this.headers = this.headers.set('Accept', 'application/json; charset=utf-8');\n  }\n\n  getCategories(): Observable<Category> {\n    // console.log(\"API Url: \", this.apiBaseUrl);\n    console.log(this.apiBaseUrl + '/api_category.php');\n    return this.http.get<Category>(this.apiBaseUrl + '/api_category.php', { headers: this.headers })\n      .pipe(timeout(this.timeOut))\n      .pipe(retry(3))\n      .pipe(catchError(this.processHttpMsg.handleError));\n  }\n\n  getQuizQuestions(amount: number, catId: number, difficulty: string, type: string): Observable<QuizQuestion> {\n    // console.log(\"API Url: \", this.apiBaseUrl);\n    let reqParameters = `amount=${amount}&category=${catId}&difficulty=${difficulty}&type=${type}`;\n    console.log(this.apiBaseUrl + `/api.php?${reqParameters}`);\n    return this.http.get<QuizQuestion>(this.apiBaseUrl + `/api.php?${reqParameters}`, { headers: this.headers })\n      .pipe(timeout(this.timeOut))\n      .pipe(retry(3))\n      .pipe(catchError(this.processHttpMsg.handleError));\n  }\n\n}\n","export const environment = {\n    production: true,\n    apiUrl: 'https://opentdb.com',\n    httpTimeOut: 30000\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["AppComponent","constructor","selectors","decls","vars","template","i0","BrowserModule","HttpClientModule","FormsModule","ReactiveFormsModule","AppRoutingModule","ProcessHttpmsgService","QuizService","QuizResultsComponent","QuizQuestionsComponent","NotFoundComponent","DecodeHtml","AppModule","bootstrap","imports","declarations","consts","FormGroup","FormControl","Validators","quizService","router","categorySelect","required","difficultySelect","inputResponse1","inputResponse2","inputResponse3","inputResponse4","inputResponse5","ngOnInit","getCategories","subscribe","next","response","categories","error","console","log","complete","createQuiz","isSubmitted01","resetChoices","catId","formCreateQuiz","value","parseInt","difficulty","toLowerCase","getQuizQuestions","quizAmount","quizType","setAllAnswers","questions","question1","results","question2","question3","question4","question5","quizQuestions","forEach","arrayItem","all_answers","incorrect_answers","push","correct_answer","sort","Math","random","undefined","submitQuiz","navigationExtras","state","dataR","formSubmitQuiz","dataQ","navigate","ctx","quizResponse","window","history","quizQuestion","quizScore","computeScore","totalQuiz","length","isIndifferent","element","inputResponse","isCorrectAnswer","isIncorrectAnswer","score","index","RouterModule","routes","path","redirectTo","pathMatch","component","forRoot","exports","transform","tempElement","document","createElement","innerHTML","innerText","pure","throwError","TimeoutError","handleError","errMsg","status","message","ErrorEvent","factory","providedIn","HttpHeaders","catchError","retry","timeout","environment","http","processHttpMsg","apiUrl","httpTimeOut","headers","set","apiBaseUrl","get","pipe","timeOut","amount","type","reqParameters","production","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}